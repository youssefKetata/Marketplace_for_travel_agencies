security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\UsersAuthenticator

            logout:
                path: app_logout
                # where to redirect after logout
                target: app_main

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall


            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true


    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN: [ROLE_USER]

        ROLE_SELLER: []

        ROLE_B2B: [ROLE_SUB_B2B]
        ROLE_SUB_B2B: [ROLE_USER]

        ROLE_B2CORP: [ROLE_B2CORP_ADH]
        ROLE_B2CORP_ADH: [ROLE_USER]

        ROLE_B2C: [ROLE_USER]


        # Easy way to control access for large sections of your site
        # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:

